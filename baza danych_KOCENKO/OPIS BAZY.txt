OPIS:Baza wypożyczalni aut.Przechowuje dane na temat klientów, aut, pracowników, cennik oraz wypożyczenia

USE wypozyczalnia;
CREATE TABLE samochody (
id_samochodu int PRIMARY KEY NOT NULL AUTO_INCREMENT,
marka varchar(20) NOT NULL,
model varchar(30) NOT NULL,
rocznik varchar(4) NOT NULL,
moc varchar(4) NOT NULL;
kolor varchar(15) NOT NULL);

USE wypozyczalnia;
INSERT INTO samochody VALUES (null, "Mercedes","AMG C63S","2019","510","czarny"),
(null, "Mercedes","AMG A45S","2020","421","żółty"),
(null, "BMW","M4","2018","450","biały"),
(null, "Porshe","911 Turbo S","2020","650","niebieski"),
(null, "Nissan","GTR","2019","570","czerwony");
===================================================================================================
USE wypozyczalnia;
CREATE TABLE klienci (
id_klienta int PRIMARY KEY NOT NULL AUTO_INCREMENT,
imię varchar(20) NOT NULL,
nazwisko varchar(30) NOT NULL,
adres varchar(30) NOT NULL,
pesel varchar(11) NOT NULL);

INSERT INTO klienci VALUES (null, "Jan","Kowalski","Janowicza 1","075336272625"),
(null, "Kacper","Worek","Dworcowa 7","82541064495"),
(null, "Kuba","Wiewior","Halera 99","01553328364"),
(null, "Marcel","Lech","Barcza 3","62438452439"),
(null, "Oskar","Czaja","Lesna 6","00523478552");
==================================================================================================
USE wypozyczalnia;
CREATE TABLE pracownicy (
id_pracownika int PRIMARY KEY NOT NULL AUTO_INCREMENT,
imię varchar(20) NOT NULL,
nazwisko varchar(30) NOT NULL,
pesel varchar(11) NOT NULL,
zarobki varchar(4) NOT NULL);

INSERT INTO pracownicy VALUES (null, "Adrzej","Dobry","075336272625","5000"),
(null, "Michal","Zly","82547544495","3500");
===================================================================================================
USE wypozyczalnia;
CREATE TABLE cennik (
cena_doba varchar(4) NOT NULL PRIMARY KEY,
id_samochodu int,
FOREIGN KEY (id_samochodu) REFERENCES samochody(id_samochodu));
INSERT INTO cennik VALUES("2400",5),
("3600",4),
("1200",3),
("1500",1),
("880",2)
===============================================================================================
USE wypozyczalnia;
CREATE TABLE wypozyczenia (
id_wypozyczenia int PRIMARY KEY NOT NULL AUTO_INCREMENT,
id_klienta int,
id_samochodu int,
id_pracownika int,
data_wyp DATE,
ile_dob varchar(2),
cena_doba varchar(4),
FOREIGN KEY (id_samochodu) REFERENCES samochody(id_samochodu),
FOREIGN KEY (id_klienta) REFERENCES klienci(id_klienta),
FOREIGN KEY (id_pracownika) REFERENCES pracownicy(id_pracownika),
FOREIGN KEY (cena_doba) REFERENCES cennik(cena_doba)
);
INSERT INTO wypozyczenia VALUES (null,1,5,1,'2020-12-15',"5","2400"),
(null,3,4,2,'2020-11-26',"8","3600"),
(null,5,2,1,'2020-12-30',"5","880"),
(null,4,3,2,'2020-12-11',"3","1200"),
(null,2,5,1,'2020-11-10',"1","2400"),
(null,3,1,2,'2020-12-16',"10","1500");
===========================================================================================
SELECT wypozyczenia.cena_doba,klienci.imię, wypozyczenia.data_wyp
FROM wypozyczenia
INNER JOIN klienci ON wypozyczenia.id_klienta=klienci.id_klienta;

SELECT wypozyczenia.cena_doba,klienci.imię, wypozyczenia.data_wyp,klienci.adres
FROM wypozyczenia
RIGHT JOIN klienci ON wypozyczenia.id_klienta=klienci.id_klienta;

SELECT cennik.cena_doba,cennik.id_samochodu, samochody.marka
FROM samochody
LEFT JOIN cennik ON cennik.id_samochodu = samochody.id_samochodu

SELECT *
FROM wypozyczenia
WHERE
(data_wyp NOT BETWEEN '2020-12-10'
 AND '2020-12-31')

SELECT SUM(ile_dob)
FROM wypozyczenia INNER JOIN klienci
ON wypozyczenia.id_klienta = klienci.id_klienta

SELECT marka, model, AVG(moc) AS srednia moc
FROM samochody
GROUP BY marka

SELECT COUNT(*) 
FROM wypozyczenia
WHERE id_pracownika LIKE "1";

SELECT marka, model ,MIN(rocznik) AS najstarsze auto
FROM samochody

SELECT data_wyp,ile_dob,cena_doba,MAX(ile_dob) AS najdluzsze_wypozyczenie
FROM wypozyczenia

SELECT kolor, Count(id_samochodu) AS Liczba_aut_koloru
FROM samochody
GROUP BY kolor; 
================================================================================
CREATE TRIGGER archiwum_klientów BEFORE DELETE ON klienci
FOR EACH ROW BEGIN
INSERT INTO archiwum_klientów
SELECT id_klienta,imię,nazwisko,adres,pesel 
FROM klienci
WHERE id_klienta=old.id_klienta;
END
=================================================================================
CREATE PROCEDURE pCenaOdDo 
@cena_od money, @cena_do money
as 
SELECT (id_samochodu) as cena_doba
FROM cennik
WHERE cena_doba >=@cena_od and cena_doba <=@cena_do 
ORDER BY cena_doba
=================================================================================
CREATE FUNCTION SumTwoValues (@val1 INT, @val2 INT)
RETURNS INT
AS
BEGIN
    RETURN (@val1 + @val2)
END




